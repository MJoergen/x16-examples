10 REM
20 REM THIS IS A SIMPLE TENNIS GAME.
30 REM USE LEFT AND RIGHT CURSOR KEYS FOR MOVEMENT.

100 REM
110 REM INITIALIZE GAME VARIABLES
120 REM
130 XP=160:         REM X-POSITION OF PLATER
140 YP=480:         REM Y-POSITION OF PLAYER
150 RP=16:          REM RADIUS OF PLAYER
160 XQ=480:         REM X-POSITION OF BOT
170 YQ=480:         REM Y-POSITION OF BOT
180 RQ=16:          REM RADIUS OF BOT
190 XB=162:         REM X-POSITION OF BALL
200 YB=200:         REM Y-POSITION OF BALL
210 RB=8:           REM RADIUS OF BALL
220 XV=0:           REM X-VELOCITY OF BALL
230 YV=0:           REM Y-VELOCITY OF BALL
240 SP=0:           REM SCORE OF PLAYER
250 SQ=0:           REM SCOPE OF BOT
260 GR=0.15:        REM GRAVITY
270 OV=0:           REM GAME OVER
280 X0=8:           REM LEFT SIDE OF FIELD
290 X1=640-8:       REM RIGHT SIDE OF FIELD
300 BL=320-8:       REM BARRIER LEFT SIDE
310 BR=320:         REM BARRIER RIGHT SIDE
320 BT=480-80:      REM BARRIER TOP SIDE
330 AP=10*256+20*2: REM SCREEN ADDRESS OF PLAYER SCORE
340 AQ=10*256+60*2: REM SCREEN ADDRESS OF BOT SCORE

400 REM
410 REM SOME ADDITIONAL CONSTANTS FOR OPTIMIZATIONS
420 REM
430 BP=(RB+RP)*(RB+RP)
440 BQ=(RB+RQ)*(RB+RQ)

600 PRINT CHR$(147)
610 PRINT: PRINT: PRINT
620 PRINT "   INITIALIZING. PLEASE WAIT..."
630 GOSUB 8000: REM INITIALIZE GRAPHICS
640 PRINT CHR$($91);CHR$(29);
650 PRINT "                              "

700 REM
710 REM GAME LOOP
720 REM
730 GOSUB 4000: REM UPDATE PLAYER
740 GOSUB 5000: REM UPDATE BOT
750 GOSUB 6000: REM UPDATE BALL
760 GOSUB 2000: REM HANDLE COLLISIONS
770 GOSUB 7000: REM UPDATE GRAPHICS
780 GOSUB 3000: REM CHECK FOR END OF GAME
790 IF OVER=0 GOTO 700
800 PRINT "GAME OVER!"
810 END

2000 REM
2010 REM HANDLE COLLISIONS
2020 REM
2030 REM COLLISION WITH LEFT WALL
2040 IF XB<X0+RB THEN XB=X0+RB:XV= ABS(XV)
2050 REM
2060 REM COLLISION WITH RIGHT WALL
2070 IF XB>X1-RB THEN XB=X1-RB:XV=-ABS(XV)
2080 REM
2090 REM COLLISION WITH BAR RIGHT SIDE
2100 IF XB>BR AND XB<BR+RB AND YB>BT THEN XB=BR+RB:XV= ABS(XV)
2110 REM
2120 REM COLLISION WITH BAR LEFT SIDE
2130 IF XB>BL-RB AND XB<BL AND YB>BT THEN XB=BL+RB:XV=-ABS(XV)
2140 REM
2150 REM COLLISION WITH BAR TOP SIDE
2160 IF YB>BT-RB AND XB<BR AND XB>BL THEN YB=BT-RB:YV=-ABS(YV)
2170 REM
2180 REM COLLISION WITH BAR LEFT CORNER
2190 XT=XB-BL: YT=YB-BT: D=XT*XT+YT*YT: IF D<RB THEN GOSUB 2400
2200 REM
2210 REM COLLISION WITH BAR RIGHT CORNER
2220 XT=XB-BR: YT=YB-BT: D=XT*XT+YT*YT: IF D<RB THEN GOSUB 2400
2230 REM
2240 REM COLLISION WITH PLAYER
2250 XT=XB-XP: YT=YB-YP: D=XT*XT+YT*YT: IF D<BP THEN GOSUB 2400
2260 REM
2270 REM COLLISION WITH BOT
2280 XT=XB-XQ: YT=YB-YQ: D=XT*XT+YT*YT: IF D<BQ THEN GOSUB 2400
2290 RETURN

2400 REM
2410 REM HANDLE COLLISION
2420 REM
2430 REM SC=SQR(BP/D)-1:XB=XB+XT*SC:YB=YB+YT*SC: REM MOVE BALL OUT OF COLLISION
2440 T1=(XV*XT+YV*YT)/(XT*XT+YT*YT)
2445 IF T1>0 THEN RETURN
2450 XV=XV-2*T1*XT
2460 YV=YV-2*T1*YT
2470 RETURN


3000 REM
3010 REM CHECK FOR GAME OVER
3020 REM
3030 IF YB<480 THEN RETURN
3040 IF XB<BL THEN SQ=SQ+1
3050 IF XB>BL THEN SP=SP+1
3060 YB=200
3070 XV=0
3080 YV=0
3090 RETURN

4000 REM
4010 REM UPDATE PLAYER
4020 REM
4030 GET A$
4040 IF A$="A" THEN GOSUB 4300: REM LEFT
4050 IF A$="D" THEN GOSUB 4400: REM RIGHT
4030 A=JOY(1)
4040 IF (A AND 2) = 0 THEN GOSUB 4300: REM LEFT
4050 IF (A AND 1) = 0 THEN GOSUB 4400: REM RIGHT
4060 RETURN

4300 REM
4310 REM MOVE LEFT
4320 REM
4330 XP=XP-7
4340 IF XP<X0+RP THEN XP=X0+RP
4350 RETURN

4400 REM
4410 REM MOVE RIGHT
4420 REM
4430 XP=XP+7
4440 IF XP>BL-RP THEN XP=BL-RP
4450 RETURN

5000 REM
5010 REM UPDATE BOT
5020 REM
5030 IF XQ>XB+2 THEN XQ=XQ-7: IF XQ<BR+RQ THEN XQ=BR+RQ
5040 IF XQ<XB+2 THEN XQ=XQ+7: IF XQ>X1-RQ THEN XQ=X1-RQ
5050 RETURN

6000 REM
6010 REM UPDATE BALL
6020 REM
6030 XB=XB+XV
6040 YB=YB+YV
6050 YV=YV+GR
6060 RETURN

7000 REM
7010 REM UPDATE GRAPHICS
7020 REM
7030 REM UPDATE PLAYER SPRITE
7040 S=XP-RP:T=INT(S/256)
7050 VPOKE $F, $5003, T
7060 VPOKE $F, $5002, S-T*256
7070 REM UPDATE BOT SPRITE
7080 S=XQ-RQ:T=INT(S/256)
7090 VPOKE $F, $500B, T
7100 VPOKE $F, $500A, S-T*256
7110 REM UPDATE BALL SPRITE
7120 S=XB-RB:T=INT(S/256)
7130 VPOKE $F, $5013, T
7140 VPOKE $F, $5012, S-T*256
7150 S=YB-RB:T=INT(S/256)
7160 VPOKE $F, $5015, T
7170 VPOKE $F, $5014, S-T*256
7180 VPOKE 0, AP, SP+48
7190 VPOKE 0, AQ, SQ+48
7200 RETURN

8000 REM
8010 REM SETUP SCREEN
8020 REM
8030 REM DISABLE SPRITES
8040 VPOKE $F, $4000, $00
8090 FOR I=0TO59
8100 VPOKE 0, 256*I+1,      $11
8110 VPOKE 0, 256*I+79*2+1, $11
8120 NEXT I
8130 FOR I=50TO59
8140 VPOKE 0, 256*I+39*2+1, $11
8150 NEXT I

8200 REM
8210 REM INITIALIZE SPRITE DATA
8220 REM
8230 ADDR=$8000: REM PLAYER SPRITE DATA
8240 SIZE=32*16
8250 GOSUB 9800
8260 REM
8270 ADDR=$A000: REM BALL SPRITE DATA
8280 SIZE=16*16
8290 GOSUB 9800

8300 REM
8310 REM CONFIGURE PLAYER SPRITE
8320 REM
8330 VPOKE $F, $5000, $00
8340 VPOKE $F, $5001, $84
8350 VPOKE $F, $5002, XP-RP
8360 VPOKE $F, $5003, $00
8370 VPOKE $F, $5004, YP-RP-256
8380 VPOKE $F, $5005, $01
8390 VPOKE $F, $5006, $0C
8400 VPOKE $F, $5007, $64

8500 REM
8510 REM CONFIGURE BOT SPRITE
8520 REM
8530 VPOKE $F, $5008, $00
8540 VPOKE $F, $5009, $84
8550 VPOKE $F, $500A, XQ-RQ-256
8560 VPOKE $F, $500B, $01
8570 VPOKE $F, $500C, YQ-RQ-256
8580 VPOKE $F, $500D, $01
8590 VPOKE $F, $500E, $0C
8600 VPOKE $F, $500F, $67

8700 REM
8710 REM CONFIGURE BALL SPRITE
8720 REM
8730 VPOKE $F, $5010, $00
8740 VPOKE $F, $5011, $85
8750 VPOKE $F, $5012, XB-RB
8760 VPOKE $F, $5013, $00
8770 VPOKE $F, $5014, YB-RB
8780 VPOKE $F, $5015, $00
8790 VPOKE $F, $5016, $0C
8800 VPOKE $F, $5017, $53

8900 REM
8910 REM ENABLE SPRITES
8920 REM
8930 VPOKE $F, $4000, $01
8940 RETURN

9400 REM THIS IS THE SPRITE DATA (32x16) FOR THE PLAYER
9410 DATA 0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0
9420 DATA 0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0
9430 DATA 0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0
9440 DATA 0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0
9450 DATA 0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0
9460 DATA 0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0
9470 DATA 0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0
9480 DATA 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
9490 DATA 0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0
9500 DATA 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9510 DATA 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9520 DATA 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9530 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9540 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9550 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9560 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

9600 REM THIS IS THE BALL DATA (16x16)
9610 DATA 0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0
9620 DATA 0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0
9630 DATA 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0
9640 DATA 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9650 DATA 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9660 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9670 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9680 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9690 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9700 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9710 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
9720 DATA 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9730 DATA 0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0
9740 DATA 0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0
9750 DATA 0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0
9760 DATA 0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0

9800 REM
9810 REM INITIALIZE SPRITE DATA
9820 REM
9830 REM "ADDR" MUST POINT TO FIRST VRAM BYTE OF SPRITE DATA
9840 REM "SIZE" MUST BE NUMBER OF BYTES TO WRITE
9850 FOR I=1TOSIZE
9860 READ A
9870 VPOKE $0, ADDR, A
9880 ADDR=ADDR+1
9890 NEXT I
9900 RETURN

